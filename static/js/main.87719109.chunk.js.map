{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["classes","theme","withStyles","card","display","details","content","cover","width","controls","playIcon","height","line","color","overflow","says","img","text","author","App","renderWords","map","say","react_default","a","createElement","style","maxWidth","Card","className","borderRadius","border","boxShadow","CardMedia_default","component","src","CardContent_default","whiteSpace","fontSize","fontFamily","Typography_default","variant","fontStyle","float","background","MuiThemeProvider_default","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kVASMA,EAAU,SAAAC,GAAK,OAAIC,qBAAW,CAClCC,KAAM,CACJC,QAAS,QAEXC,QAAS,GAITC,QAAS,GAGTC,MAAO,CACLC,MAAO,KAETC,SAAU,GAMVC,SAAU,CACRC,OAAQ,GACRH,MAAO,IAETI,KAAM,CACJC,MAAO,UACPF,OAAQ,MACRG,SAAU,aAKRC,EAAO,CACX,CACEC,IAAK,2GACLC,KAAM,6FACNC,OAAQ,iDAEV,CACEF,IAAK,qKACLC,KAAM,sPACNC,OAAQ,iDAGV,CACEF,IAAK,sIACLC,KAAM,sJACNC,OAAQ,oCAEV,CACED,KAAM,qNACNC,OAAQ,mCAEV,CACED,KAAM,0KACNC,OAAQ,uBAEV,CACED,KAAM,oJACNC,OAAQ,mCAEV,CACED,KAAM,2JACNC,OAAQ,8CAEV,CACED,KAAM,iQACNC,OAAQ,sDAEV,CACED,KAAM,kSACNC,OAAQ,wFAEV,CACED,KAAM,8VAENC,OAAQ,mCAEV,CACED,KAAM,8cAENC,OAAQ,6DAEV,CACEF,IAAK,0DACLE,OAAQ,qEAEV,CACEF,IAAK,0DACLE,OAAQ,4EAGV,CACEF,IAAK,gFACLC,KAAM,yCACNC,OAAQ,kCAEV,CACEA,OAAQ,qBACRD,KAAM,+EACND,IAAM,mCAER,CACEE,OAAQ,qBACRD,KAAM,+EAER,CACED,IAAK,0DACLC,KAAM,GACNC,OAAQ,sBAEV,CACEF,IAAK,yKACLC,KAAM,GACNC,OAAQ,uBAsCGC,6MAhCbC,YAAc,WACZ,OACEL,EAAKM,IAAI,SAACC,GAAD,OACPC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,SAAU,MACrBJ,EAAAC,EAAAC,cAACG,EAAA,KAAD,CAAMC,UAAW7B,EAAQG,KAAMuB,MAAO,CAACI,aAAc,EAAGC,OAAQ,EAAGC,UAAW,SAC5ET,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEK,UAAW7B,EAAQO,MACnB2B,UAAW,MACXC,IAAKb,EAAIN,MAEXO,EAAAC,EAAAC,cAAA,OAAKI,UAAW7B,EAAQK,SACtBkB,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAaK,UAAW7B,EAAQM,SAC9BiB,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACW,WAAW,WAAYxB,MAAM,yBAA0ByB,SAAU,QAASC,WAAW,0FAC9FjB,EAAIL,MAEPM,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAYiB,QAAQ,YAAY5B,MAAM,gBAAgBa,MAAO,CAACgB,UAAW,WACvEnB,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAACiB,MAAO,UAAlB,MAAgCrB,EAAIJ,YAK5CK,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACkB,WAAY,QAASjC,OAAQ,KAA1C,oFAQN,OAAOY,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,KAAmBsB,KAAK1B,sBA9BjB2B,aCpHEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.87719109.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport { css, withStyles } from '@material-ui/core/styles';\r\n\r\nimport {Card} from 'material-ui/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst classes = theme => withStyles({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    // display: 'flex',\r\n    // flexDirection: 'column',\r\n  },\r\n  content: {\r\n    // flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    // display: 'flex',\r\n    // alignItems: 'center',\r\n    // paddingLeft: theme.spacing.unit,\r\n    // paddingBottom: theme.spacing.unit,\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  line: {\r\n    color: '#ffffff',\r\n    height: '2px',\r\n    overflow: 'hidden'\r\n  }\r\n});\r\n\r\n\r\nconst says = [\r\n  {\r\n    img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_fjc0UXoPachwbV4ZbJVy-8lYv2VAVnvlKjSkiKDYJOit6vLi\",\r\n    text: \"잘 사는 사람은 좋은 사람 되기 쉬워\",\r\n    author: \"나의 아저씨, 지안\"\r\n  },\r\n  {\r\n    img: \"https://steemitimages.com/0x0/https://cdn.steemitimages.com/DQmdDrBRr8atszmkF3uxBrKquRaHvgAbzcd9P3ByCTPNRG4/%EB%82%98%EC%9D%98%20%EC%95%84%EC%A0%80%EC%94%A816.jpg\",\r\n    text: \"잘난 척 하는 인간들로 바글대는 세상, 너무 지겨워.\\n\\n난 잘난게 하나도 없어서 더 죽을 거 같아요.\",\r\n    author: \"나의 아저씨, 유라\"\r\n  },\r\n\r\n  {\r\n    img: \"https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory&fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F2442904E586F84D50D80FB\",\r\n    text: \"그 아이만이 날 죽일 수 있는데... 그 아이가 날 자꾸 살게 해.\",\r\n    author: \"도깨비, 김신\"\r\n  },\r\n  {\r\n    text: \"우주를 단 한사람으로 축소하고, 한 사람을 신으로 확대하면 그것이 바로 사랑이다.\",\r\n    author: \"빅토르 위고\"\r\n  },\r\n  {\r\n    text: \"부부란 서로 반씩 되는 것이 아니라, 하나로써 전체가 되는 것이다.\",\r\n    author: \"반 고흐\"\r\n  },\r\n  {\r\n    text: \"인생에 있어서 최고의 행복은 사랑받고 있다는 확신이다.\",\r\n    author: \"빅토르 위고\"\r\n  },\r\n  {\r\n    text: \"누군가를 사랑한다는 것은 자신을 그와 동일시 하는 것이다.\",\r\n    author: \"아리스토텔레스\"\r\n  },\r\n  {\r\n    text: \"그냥 너무 기뻐서 자꾸 슬픈 사람들의 얼굴이 떠올라.\\n\\n그 사람들도 같이 이 기쁨을 누리면 좋을 텐데.\",\r\n    author: \"떠돌이 용병 아레스\"\r\n  },\r\n  {\r\n    text: \"사람은 자신의 장점 때문에 찾아온 사랑에 흔들리지만\\n\\n결국에는 자신의 결점을 사랑해 주는 사람에게 돌아간다.\",\r\n    author: \"김재식, 사랑할 떄 알아야 할 것들\"\r\n  },\r\n  {\r\n    text: \"생각할 시간이 필요하다는 말은 마음의 여유가 없다는 뜻이 아니라\\n\\n\" +\r\n    \"이미 내린 결론을 조금만 더 미루고 싶을 때 나오는 말일지도 모른다.\",\r\n    author: \"생각할 시간\"\r\n  },\r\n  {\r\n    text: \"따지고 보면 사랑도 구라야! 사랑은 상대방을 속이고 자기 자신까지 속이거든 ...\\n\\n\" +\r\n    \"의리란 놈은 이랬다 저랬다 하지 않지, 당신이 나와 결혼해주면 한 평생 남편으로서 의리를 지킬거요.\",\r\n    author: \"타짜, 고니가 화린에게\"\r\n  },\r\n  {\r\n    img: \"https://t1.daumcdn.net/cfile/tistory/25731550544307EB34\",\r\n    author: \"원피스, 포트거스 D 에이스\"\r\n  },\r\n  {\r\n    img: \"https://t1.daumcdn.net/cfile/tistory/252B35495458846B1B\",\r\n    author: \"원피스, 마샬 D 티치 검은수염\"\r\n  },\r\n\r\n  {\r\n    img: \"https://pasteve.com/wp-content/uploads/2018/01/shutterstock_751011886-min.jpg\",\r\n    text: \"너 자신을 알라\",\r\n    author: \"소크라테스\"\r\n  },\r\n  {\r\n    author: \"회사원\",\r\n    text: \"퇴근 시간은 내 마음속에 있다\",\r\n    img : \"https://redtea.kr/img/fri/6.jpg\"\r\n  },\r\n  {\r\n    author: \"지각생\",\r\n    text: \"늦었다 생각하면 진짜 늦었다\"\r\n  },\r\n  {\r\n    img: 'https://t1.daumcdn.net/cfile/tistory/216A3344560E951F17',\r\n    text: '',\r\n    author: '박명수',\r\n  },\r\n  {\r\n    img: 'https://scontent-dfw5-2.cdninstagram.com/vp/6367c45ae0fa4fa830ded2d6b18b3c9a/5C55C1EA/t51.2885-15/e35/c242.0.596.596/42144783_476437782844605_784529268420526522_n.jpg',\r\n    text: '',\r\n    author: '박명수',\r\n  }\r\n];\r\n\r\n\r\nclass App extends Component {\r\n  renderWords = () => {\r\n    return (\r\n      says.map((say) => (\r\n        <div style={{maxWidth: 480}}>\r\n          <Card className={classes.card} style={{borderRadius: 0, border: 0, boxShadow: 'none'}}>\r\n            <CardMedia\r\n              className={classes.cover}\r\n              component={\"img\"}\r\n              src={say.img}\r\n            />\r\n            <div className={classes.details}>\r\n              <CardContent className={classes.content}>\r\n                <h1 style={{whiteSpace:'pre-line', color:'rgba(20, 20, 20, 0.81)', fontSize: '1.8em', fontFamily:'Circular,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif !important'}}>\r\n                  {say.text}\r\n                </h1>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" style={{fontStyle: 'italic'}}>\r\n                  <b style={{float: 'right'}}>by {say.author}</b>\r\n                </Typography>\r\n              </CardContent>\r\n            </div>\r\n          </Card>\r\n          <div style={{background: 'white', height: 85}}>&nbsp;</div>\r\n          {/*<div style={{background: 'rgba(251, 251, 251, 1)', height: 30}}>&nbsp;</div>*/}\r\n        </div>\r\n      ))\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <MuiThemeProvider>{this.renderWords()}</MuiThemeProvider>\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}