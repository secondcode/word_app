{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["classes","theme","withStyles","card","display","details","content","cover","width","controls","playIcon","height","line","color","overflow","says","img","text","author","App","renderWords","map","say","react_default","a","createElement","style","maxWidth","Card","className","borderRadius","border","boxShadow","CardMedia_default","component","src","CardContent_default","whiteSpace","fontSize","fontFamily","Typography_default","variant","fontStyle","float","background","MuiThemeProvider_default","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kVASMA,EAAU,SAAAC,GAAK,OAAIC,qBAAW,CAClCC,KAAM,CACJC,QAAS,QAEXC,QAAS,GAITC,QAAS,GAGTC,MAAO,CACLC,MAAO,KAETC,SAAU,GAMVC,SAAU,CACRC,OAAQ,GACRH,MAAO,IAETI,KAAM,CACJC,MAAO,UACPF,OAAQ,MACRG,SAAU,aAKRC,EAAO,CACX,CACEC,IAAK,2GACLC,KAAM,6FACNC,OAAQ,iDAEV,CACEF,IAAK,qKACLC,KAAM,sPACNC,OAAQ,iDAGV,CACEF,IAAK,sIACLC,KAAM,sJACNC,OAAQ,oCAEV,CACED,KAAM,qNACNC,OAAQ,mCAEV,CACED,KAAM,0KACNC,OAAQ,uBAEV,CACED,KAAM,oJACNC,OAAQ,mCAEV,CACED,KAAM,2JACNC,OAAQ,8CAEV,CACED,KAAM,iQACNC,OAAQ,sDAEV,CACED,KAAM,kSACNC,OAAQ,wFAEV,CACED,KAAM,8VAENC,OAAQ,mCAEV,CACED,KAAM,8cAENC,OAAQ,6DAEV,CACEF,IAAK,0DACLE,OAAQ,qEAEV,CACEF,IAAK,0DACLE,OAAQ,4EAGV,CACEF,IAAK,wFACLE,OAAQ,iDAEV,CACEF,IAAK,wFACLE,OAAQ,oCAEV,CACEF,IAAK,wFACLE,OAAQ,oCAEV,CACEF,IAAK,wFACLE,OAAQ,oCAEV,CACEF,IAAK,6GACLE,OAAQ,oCAGV,CACEA,OAAQ,qBACRD,KAAM,+EACND,IAAM,mCAER,CACEE,OAAQ,qBACRD,KAAM,+EAER,CACED,IAAK,0DACLC,KAAM,GACNC,OAAQ,sBAEV,CACEF,IAAK,yKACLC,KAAM,GACNC,OAAQ,uBAsCGC,6MAhCbC,YAAc,WACZ,OACEL,EAAKM,IAAI,SAACC,GAAD,OACPC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,SAAU,MACrBJ,EAAAC,EAAAC,cAACG,EAAA,KAAD,CAAMC,UAAW7B,EAAQG,KAAMuB,MAAO,CAACI,aAAc,EAAGC,OAAQ,EAAGC,UAAW,SAC5ET,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEK,UAAW7B,EAAQO,MACnB2B,UAAW,MACXC,IAAKb,EAAIN,MAEXO,EAAAC,EAAAC,cAAA,OAAKI,UAAW7B,EAAQK,SACtBkB,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAaK,UAAW7B,EAAQM,SAC9BiB,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACW,WAAW,WAAYxB,MAAM,yBAA0ByB,SAAU,QAASC,WAAW,0FAC9FjB,EAAIL,MAEPM,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAYiB,QAAQ,YAAY5B,MAAM,gBAAgBa,MAAO,CAACgB,UAAW,WACvEnB,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAACiB,MAAO,UAAlB,MAAgCrB,EAAIJ,YAK5CK,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACkB,WAAY,QAASjC,OAAQ,KAA1C,oFAQN,OAAOY,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,KAAmBsB,KAAK1B,sBA9BjB2B,aCpIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fbd94f31.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport { css, withStyles } from '@material-ui/core/styles';\n\nimport {Card} from 'material-ui/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst classes = theme => withStyles({\n  card: {\n    display: 'flex',\n  },\n  details: {\n    // display: 'flex',\n    // flexDirection: 'column',\n  },\n  content: {\n    // flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    // display: 'flex',\n    // alignItems: 'center',\n    // paddingLeft: theme.spacing.unit,\n    // paddingBottom: theme.spacing.unit,\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n  line: {\n    color: '#ffffff',\n    height: '2px',\n    overflow: 'hidden'\n  }\n});\n\n\nconst says = [\n  {\n    img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_fjc0UXoPachwbV4ZbJVy-8lYv2VAVnvlKjSkiKDYJOit6vLi\",\n    text: \"잘 사는 사람은 좋은 사람 되기 쉬워\",\n    author: \"나의 아저씨, 지안\"\n  },\n  {\n    img: \"https://steemitimages.com/0x0/https://cdn.steemitimages.com/DQmdDrBRr8atszmkF3uxBrKquRaHvgAbzcd9P3ByCTPNRG4/%EB%82%98%EC%9D%98%20%EC%95%84%EC%A0%80%EC%94%A816.jpg\",\n    text: \"잘난 척 하는 인간들로 바글대는 세상, 너무 지겨워.\\n\\n난 잘난게 하나도 없어서 더 죽을 거 같아요.\",\n    author: \"나의 아저씨, 유라\"\n  },\n\n  {\n    img: \"https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory&fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F2442904E586F84D50D80FB\",\n    text: \"그 아이만이 날 죽일 수 있는데... 그 아이가 날 자꾸 살게 해.\",\n    author: \"도깨비, 김신\"\n  },\n  {\n    text: \"우주를 단 한사람으로 축소하고, 한 사람을 신으로 확대하면 그것이 바로 사랑이다.\",\n    author: \"빅토르 위고\"\n  },\n  {\n    text: \"부부란 서로 반씩 되는 것이 아니라, 하나로써 전체가 되는 것이다.\",\n    author: \"반 고흐\"\n  },\n  {\n    text: \"인생에 있어서 최고의 행복은 사랑받고 있다는 확신이다.\",\n    author: \"빅토르 위고\"\n  },\n  {\n    text: \"누군가를 사랑한다는 것은 자신을 그와 동일시 하는 것이다.\",\n    author: \"아리스토텔레스\"\n  },\n  {\n    text: \"그냥 너무 기뻐서 자꾸 슬픈 사람들의 얼굴이 떠올라.\\n\\n그 사람들도 같이 이 기쁨을 누리면 좋을 텐데.\",\n    author: \"떠돌이 용병 아레스\"\n  },\n  {\n    text: \"사람은 자신의 장점 때문에 찾아온 사랑에 흔들리지만\\n\\n결국에는 자신의 결점을 사랑해 주는 사람에게 돌아간다.\",\n    author: \"김재식, 사랑할 떄 알아야 할 것들\"\n  },\n  {\n    text: \"생각할 시간이 필요하다는 말은 마음의 여유가 없다는 뜻이 아니라\\n\\n\" +\n    \"이미 내린 결론을 조금만 더 미루고 싶을 때 나오는 말일지도 모른다.\",\n    author: \"생각할 시간\"\n  },\n  {\n    text: \"따지고 보면 사랑도 구라야! 사랑은 상대방을 속이고 자기 자신까지 속이거든 ...\\n\\n\" +\n    \"의리란 놈은 이랬다 저랬다 하지 않지, 당신이 나와 결혼해주면 한 평생 남편으로서 의리를 지킬거요.\",\n    author: \"타짜, 고니가 화린에게\"\n  },\n  {\n    img: \"https://t1.daumcdn.net/cfile/tistory/25731550544307EB34\",\n    author: \"원피스, 포트거스 D 에이스\"\n  },\n  {\n    img: \"https://t1.daumcdn.net/cfile/tistory/252B35495458846B1B\",\n    author: \"원피스, 마샬 D 티치 검은수염\"\n  },\n\n  {\n    img: \"http://img.lifestyler.co.kr/uploads/program/cheditor/2014/11/254T2TR4ZP8HSHTG8SJ2.jpg\",\n    author: \"미생, 오상식 차장\"\n  },\n  {\n    img: \"http://img.lifestyler.co.kr/uploads/program/cheditor/2014/11/QBH5RJZU3O1C3PWYPDQN.jpg\",\n    author: \"미생, 장그레\"\n  },\n  {\n    img: \"http://img.lifestyler.co.kr/uploads/program/cheditor/2014/11/P8ZBFERLIMMQZA7C8OWM.jpg\",\n    author: \"미생, 장그레\"\n  },\n  {\n    img: \"http://img.lifestyler.co.kr/uploads/program/cheditor/2014/11/FYQSNEANV891CYIM5RZZ.jpg\",\n    author: \"미생, 장그레\"\n  },\n  {\n    img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQihdGssLOCcakFegIOT3-CKS7GUq6mPJ24k2vitv0KTODSi7neMA\",\n    author: \"영화, 캐쉬백\"\n  },\n\n  {\n    author: \"회사원\",\n    text: \"퇴근 시간은 내 마음속에 있다\",\n    img : \"https://redtea.kr/img/fri/6.jpg\"\n  },\n  {\n    author: \"지각생\",\n    text: \"늦었다 생각하면 진짜 늦었다\"\n  },\n  {\n    img: 'https://t1.daumcdn.net/cfile/tistory/216A3344560E951F17',\n    text: '',\n    author: '박명수',\n  },\n  {\n    img: 'https://scontent-dfw5-2.cdninstagram.com/vp/6367c45ae0fa4fa830ded2d6b18b3c9a/5C55C1EA/t51.2885-15/e35/c242.0.596.596/42144783_476437782844605_784529268420526522_n.jpg',\n    text: '',\n    author: '박명수',\n  }\n];\n\n\nclass App extends Component {\n  renderWords = () => {\n    return (\n      says.map((say) => (\n        <div style={{maxWidth: 480}}>\n          <Card className={classes.card} style={{borderRadius: 0, border: 0, boxShadow: 'none'}}>\n            <CardMedia\n              className={classes.cover}\n              component={\"img\"}\n              src={say.img}\n            />\n            <div className={classes.details}>\n              <CardContent className={classes.content}>\n                <h1 style={{whiteSpace:'pre-line', color:'rgba(20, 20, 20, 0.81)', fontSize: '1.8em', fontFamily:'Circular,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif !important'}}>\n                  {say.text}\n                </h1>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" style={{fontStyle: 'italic'}}>\n                  <b style={{float: 'right'}}>by {say.author}</b>\n                </Typography>\n              </CardContent>\n            </div>\n          </Card>\n          <div style={{background: 'white', height: 85}}>&nbsp;</div>\n          {/*<div style={{background: 'rgba(251, 251, 251, 1)', height: 30}}>&nbsp;</div>*/}\n        </div>\n      ))\n    );\n  };\n\n  render() {\n    return <MuiThemeProvider>{this.renderWords()}</MuiThemeProvider>\n  }\n}\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}